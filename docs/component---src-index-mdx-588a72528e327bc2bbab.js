(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{"7A3R":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return c})),n.d(t,"default",(function(){return d}));var i=n("Fcif"),a=n("dV/x"),b=(n("mXGw"),n("/FXl")),o=n("TjRS");n("aD51");const l=["components"],c={};void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!Object.prototype.hasOwnProperty.call(c,"__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/index.mdx"}});const r={_frontmatter:c},p=o.a;function d(e){let{components:t}=e,n=Object(a.a)(e,l);return Object(b.b)(p,Object(i.a)({},r,n,{components:t,mdxType:"MDXLayout"}),Object(b.b)("h1",{id:"react-semantic-layoutbeta"},"react-semantic-layout(beta)"),Object(b.b)("p",null,"一套布局组件，灵感来自 flutter，可以按照组件同名去 flutter 搜索相同的组件。"),Object(b.b)("h2",{id:"motivation"},"Motivation"),Object(b.b)("p",null,"在基础组件的支持下，我们的业务代码已经很少需要写样式了，而我们的大部分工作是处理布局和实现逻辑。"),Object(b.b)("p",null,"本组件尝试一种新的写法，让我们业务仔回归初心，专心处理布局和实现逻辑。"),Object(b.b)("h2",{id:"design"},"Design"),Object(b.b)("p",null,"效仿 flutter 的设计，我们把 ",Object(b.b)("inlineCode",{parentName:"p"},"style")," 拆分成 3 个部分, 分别是：布局，约束和样式。"),Object(b.b)("h3",{id:"布局layout"},"布局(Layout)"),Object(b.b)("p",null,Object(b.b)("a",{parentName:"p",href:"https://flutter.dev/docs/development/ui/layout"},"https://flutter.dev/docs/development/ui/layout")),Object(b.b)("p",null,"目前从 ",Object(b.b)("inlineCode",{parentName:"p"},"style")," 拆分出来的布局属性有：display，margin，padding，overflow等等，具体需要参考 ",Object(b.b)("inlineCode",{parentName:"p"},"Container")," 的实现。"),Object(b.b)("h3",{id:"约束constraint"},"约束(Constraint)"),Object(b.b)("p",null,"只有 4 个属性 ",Object(b.b)("inlineCode",{parentName:"p"},"max-width"),", ",Object(b.b)("inlineCode",{parentName:"p"},"max-height"),", ",Object(b.b)("inlineCode",{parentName:"p"},"min-width"),", ",Object(b.b)("inlineCode",{parentName:"p"},"min-height"),"。"),Object(b.b)("h3",{id:"样式style"},"样式(Style)"),Object(b.b)("p",null,"字体大小，字体颜色，背景色等等。"))}void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!Object.prototype.hasOwnProperty.call(d,"__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/index.mdx"}}),d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-index-mdx-588a72528e327bc2bbab.js.map