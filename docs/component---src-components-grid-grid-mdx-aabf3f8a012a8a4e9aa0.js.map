{"version":3,"sources":["webpack:///../src/components/Grid/Grid.mdx"],"names":["_frontmatter","Object","isExtensible","prototype","hasOwnProperty","call","defineProperty","configurable","value","name","filename","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","Playground","__position","__code","__scope","Props","Grid","Container","Center","columns","mainAxisGap","crossAxisGap","padding","color","parentName","Array","from","length","_","i","key","style","border","rows","height","mainAxisAlignment","crossAxisAlignment","crossAxisSize","marginTop","of","isMDXComponent"],"mappings":"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","file":"component---src-components-grid-grid-mdx-aabf3f8a012a8a4e9aa0.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"C:/Users/binmax/Workspace/react-semantic-layout/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Grid from './index';\nimport Container from '../Container';\nimport Center from '../Center';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"grid\"\n    }}>{`Grid`}</h1>\n    <p>{`Grid 组件提供了网格布局功能，支持通过指定行数和列数来创建规整的网格布局。当没有指定网格尺寸时，会回退到 flex 布局。`}</p>\n    <h2 {...{\n      \"id\": \"基础用法\"\n    }}>{`基础用法`}</h2>\n    <Playground __position={0} __code={'<Grid columns={3} mainAxisGap={16} crossAxisGap={16}>\\n  <Container padding=\\\"20px\\\" color=\\\"#f0f0f0\\\">\\n    <Center>1</Center>\\n  </Container>\\n  <Container padding=\\\"20px\\\" color=\\\"#f0f0f0\\\">\\n    <Center>2</Center>\\n  </Container>\\n  <Container padding=\\\"20px\\\" color=\\\"#f0f0f0\\\">\\n    <Center>3</Center>\\n  </Container>\\n  <Container padding=\\\"20px\\\" color=\\\"#f0f0f0\\\">\\n    <Center>4</Center>\\n  </Container>\\n  <Container padding=\\\"20px\\\" color=\\\"#f0f0f0\\\">\\n    <Center>5</Center>\\n  </Container>\\n  <Container padding=\\\"20px\\\" color=\\\"#f0f0f0\\\">\\n    <Center>6</Center>\\n  </Container>\\n</Grid>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Grid,\n      Container,\n      Center,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Grid columns={3} mainAxisGap={16} crossAxisGap={16} mdxType=\"Grid\">\n    <Container padding=\"20px\" color=\"#f0f0f0\" mdxType=\"Container\">\n      <Center mdxType=\"Center\">1</Center>\n    </Container>\n    <Container padding=\"20px\" color=\"#f0f0f0\" mdxType=\"Container\">\n      <Center mdxType=\"Center\">2</Center>\n    </Container>\n    <Container padding=\"20px\" color=\"#f0f0f0\" mdxType=\"Container\">\n      <Center mdxType=\"Center\">3</Center>\n    </Container>\n    <Container padding=\"20px\" color=\"#f0f0f0\" mdxType=\"Container\">\n      <Center mdxType=\"Center\">4</Center>\n    </Container>\n    <Container padding=\"20px\" color=\"#f0f0f0\" mdxType=\"Container\">\n      <Center mdxType=\"Center\">5</Center>\n    </Container>\n    <Container padding=\"20px\" color=\"#f0f0f0\" mdxType=\"Container\">\n      <Center mdxType=\"Center\">6</Center>\n    </Container>\n  </Grid>\n    </Playground>\n    <h2 {...{\n      \"id\": \"指定列数\"\n    }}>{`指定列数`}</h2>\n    <p>{`通过 `}<inlineCode parentName=\"p\">{`columns`}</inlineCode>{` 属性可以指定网格的列数：`}</p>\n    <Playground __position={1} __code={'<Grid columns={4} mainAxisGap={12} crossAxisGap={12}>\\n  {Array.from({ length: 8 }, (_, i) => (\\n    <Container\\n      key={i}\\n      padding=\\\"15px\\\"\\n      color=\\\"#e6f3ff\\\"\\n      style={{ border: \\'1px solid #91d5ff\\' }}\\n    >\\n      <Center>Item {i + 1}</Center>\\n    </Container>\\n  ))}\\n</Grid>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Grid,\n      Container,\n      Center,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Grid columns={4} mainAxisGap={12} crossAxisGap={12} mdxType=\"Grid\">\n    {Array.from({\n          length: 8\n        }, (_, i) => <Container key={i} padding=\"15px\" color=\"#e6f3ff\" style={{\n          border: '1px solid #91d5ff'\n        }} mdxType=\"Container\">\n        <Center mdxType=\"Center\">Item {i + 1}</Center>\n      </Container>)}\n  </Grid>\n    </Playground>\n    <h2 {...{\n      \"id\": \"指定行数\"\n    }}>{`指定行数`}</h2>\n    <p>{`通过 `}<inlineCode parentName=\"p\">{`rows`}</inlineCode>{` 属性可以指定网格的行数：`}</p>\n    <Playground __position={2} __code={'<Grid rows={2} mainAxisGap={16} crossAxisGap={16}>\\n  {Array.from({ length: 6 }, (_, i) => (\\n    <Container\\n      key={i}\\n      padding=\\\"20px\\\"\\n      color=\\\"#fff2e6\\\"\\n      style={{ border: \\'1px solid #ffb366\\' }}\\n    >\\n      <Center>Item {i + 1}</Center>\\n    </Container>\\n  ))}\\n</Grid>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Grid,\n      Container,\n      Center,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Grid rows={2} mainAxisGap={16} crossAxisGap={16} mdxType=\"Grid\">\n    {Array.from({\n          length: 6\n        }, (_, i) => <Container key={i} padding=\"20px\" color=\"#fff2e6\" style={{\n          border: '1px solid #ffb366'\n        }} mdxType=\"Container\">\n        <Center mdxType=\"Center\">Item {i + 1}</Center>\n      </Container>)}\n  </Grid>\n    </Playground>\n    <h2 {...{\n      \"id\": \"同时指定行数和列数\"\n    }}>{`同时指定行数和列数`}</h2>\n    <p>{`可以同时指定行数和列数来创建固定尺寸的网格：`}</p>\n    <Playground __position={3} __code={'<Grid rows={2} columns={3} mainAxisGap={16} crossAxisGap={16}>\\n  {Array.from({ length: 6 }, (_, i) => (\\n    <Container\\n      key={i}\\n      padding=\\\"20px\\\"\\n      color=\\\"#f6ffed\\\"\\n      style={{ border: \\'1px solid #95de64\\' }}\\n    >\\n      <Center>{i + 1}</Center>\\n    </Container>\\n  ))}\\n</Grid>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Grid,\n      Container,\n      Center,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Grid rows={2} columns={3} mainAxisGap={16} crossAxisGap={16} mdxType=\"Grid\">\n    {Array.from({\n          length: 6\n        }, (_, i) => <Container key={i} padding=\"20px\" color=\"#f6ffed\" style={{\n          border: '1px solid #95de64'\n        }} mdxType=\"Container\">\n        <Center mdxType=\"Center\">{i + 1}</Center>\n      </Container>)}\n  </Grid>\n    </Playground>\n    <h2 {...{\n      \"id\": \"对齐方式\"\n    }}>{`对齐方式`}</h2>\n    <p>{`支持主轴和交叉轴的对齐设置：`}</p>\n    <Playground __position={4} __code={'<Container height=\\\"300px\\\" style={{ border: \\'1px solid #ddd\\' }}>\\n  <Grid\\n    columns={2}\\n    mainAxisAlignment=\\\"center\\\"\\n    crossAxisAlignment=\\\"center\\\"\\n    mainAxisGap={20}\\n    crossAxisGap={20}\\n    crossAxisSize=\\\"max\\\"\\n  >\\n    <Container padding=\\\"20px\\\" color=\\\"#ffeaa7\\\">\\n      <Center>1</Center>\\n    </Container>\\n    <Container padding=\\\"20px\\\" color=\\\"#ffeaa7\\\">\\n      <Center>2</Center>\\n    </Container>\\n    <Container padding=\\\"20px\\\" color=\\\"#ffeaa7\\\">\\n      <Center>3</Center>\\n    </Container>\\n    <Container padding=\\\"20px\\\" color=\\\"#ffeaa7\\\">\\n      <Center>4</Center>\\n    </Container>\\n  </Grid>\\n</Container>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Grid,\n      Container,\n      Center,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Container height=\"300px\" style={{\n        border: '1px solid #ddd'\n      }} mdxType=\"Container\">\n    <Grid columns={2} mainAxisAlignment=\"center\" crossAxisAlignment=\"center\" mainAxisGap={20} crossAxisGap={20} crossAxisSize=\"max\" mdxType=\"Grid\">\n      <Container padding=\"20px\" color=\"#ffeaa7\" mdxType=\"Container\">\n        <Center mdxType=\"Center\">1</Center>\n      </Container>\n      <Container padding=\"20px\" color=\"#ffeaa7\" mdxType=\"Container\">\n        <Center mdxType=\"Center\">2</Center>\n      </Container>\n      <Container padding=\"20px\" color=\"#ffeaa7\" mdxType=\"Container\">\n        <Center mdxType=\"Center\">3</Center>\n      </Container>\n      <Container padding=\"20px\" color=\"#ffeaa7\" mdxType=\"Container\">\n        <Center mdxType=\"Center\">4</Center>\n      </Container>\n    </Grid>\n  </Container>\n    </Playground>\n    <h2 {...{\n      \"id\": \"无网格尺寸flex-回退\"\n    }}>{`无网格尺寸（Flex 回退）`}</h2>\n    <p>{`当没有指定 `}<inlineCode parentName=\"p\">{`columns`}</inlineCode>{` 或 `}<inlineCode parentName=\"p\">{`rows`}</inlineCode>{` 时，Grid 组件会回退到 flex 布局：`}</p>\n    <Playground __position={5} __code={'<Grid mainAxisGap={16} crossAxisGap={16}>\\n  {Array.from({ length: 5 }, (_, i) => (\\n    <Container\\n      key={i}\\n      padding=\\\"15px 25px\\\"\\n      color=\\\"#e6fffb\\\"\\n      style={{ border: \\'1px solid #87e8de\\' }}\\n    >\\n      <Center>Flex Item {i + 1}</Center>\\n    </Container>\\n  ))}\\n</Grid>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Grid,\n      Container,\n      Center,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Grid mainAxisGap={16} crossAxisGap={16} mdxType=\"Grid\">\n    {Array.from({\n          length: 5\n        }, (_, i) => <Container key={i} padding=\"15px 25px\" color=\"#e6fffb\" style={{\n          border: '1px solid #87e8de'\n        }} mdxType=\"Container\">\n        <Center mdxType=\"Center\">Flex Item {i + 1}</Center>\n      </Container>)}\n  </Grid>\n    </Playground>\n    <h2 {...{\n      \"id\": \"自定义间距\"\n    }}>{`自定义间距`}</h2>\n    <p>{`支持不同的间距设置，可以使用数字（像素）或字符串：`}</p>\n    <Playground __position={6} __code={'<div>\\n  <h4>大间距</h4>{\\' \\'}\\n  <Grid columns={3} mainAxisGap={32} crossAxisGap={24}>\\n    {Array.from({ length: 6 }, (_, i) => (\\n      <Container\\n        key={i}\\n        padding=\\\"15px\\\"\\n        color=\\\"#fff1f0\\\"\\n        style={{ border: \\'1px solid #ffaaa5\\' }}\\n      >\\n        <Center>{i + 1}</Center>\\n      </Container>\\n    ))}\\n  </Grid>\\n  <h4 style={{ marginTop: \\'32px\\' }}>使用 rem 单位</h4>{\\' \\'}\\n  <Grid columns={4} mainAxisGap=\\\"1rem\\\" crossAxisGap=\\\"0.5rem\\\">\\n    {Array.from({ length: 8 }, (_, i) => (\\n      <Container\\n        key={i}\\n        padding=\\\"10px\\\"\\n        color=\\\"#f9f0ff\\\"\\n        style={{ border: \\'1px solid #d3adf7\\' }}\\n      >\\n        <Center>{i + 1}</Center>\\n      </Container>\\n    ))}\\n  </Grid>\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Grid,\n      Container,\n      Center,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <div>\n    <h4>大间距</h4>    <Grid columns={3} mainAxisGap={32} crossAxisGap={24} mdxType=\"Grid\">\n      {Array.from({\n            length: 6\n          }, (_, i) => <Container key={i} padding=\"15px\" color=\"#fff1f0\" style={{\n            border: '1px solid #ffaaa5'\n          }} mdxType=\"Container\">\n          <Center mdxType=\"Center\">{i + 1}</Center>\n        </Container>)}\n    </Grid>\n    <h4 style={{\n          marginTop: '32px'\n        }}>使用 rem 单位</h4>    <Grid columns={4} mainAxisGap=\"1rem\" crossAxisGap=\"0.5rem\" mdxType=\"Grid\">\n      {Array.from({\n            length: 8\n          }, (_, i) => <Container key={i} padding=\"10px\" color=\"#f9f0ff\" style={{\n            border: '1px solid #d3adf7'\n          }} mdxType=\"Container\">\n          <Center mdxType=\"Center\">{i + 1}</Center>\n        </Container>)}\n    </Grid>\n  </div>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Grid} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"使用场景\"\n    }}>{`使用场景`}</h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`产品展示网格`}</strong>{`: 创建整齐的产品卡片网格`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`图片画廊`}</strong>{`: 按固定列数排列图片`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`仪表板布局`}</strong>{`: 创建规整的数据卡片网格`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`表单布局`}</strong>{`: 创建多列表单字段布局`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`响应式网格`}</strong>{`: 结合媒体查询实现响应式网格`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}