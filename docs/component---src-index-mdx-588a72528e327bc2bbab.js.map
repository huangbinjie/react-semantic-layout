{"version":3,"sources":["webpack:///../src/index.mdx"],"names":["_frontmatter","Object","isExtensible","prototype","hasOwnProperty","call","defineProperty","configurable","value","name","filename","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"mappings":"2RAMaA,EAAe,QAAG,IAAAA,UAAAC,OAAAD,IAAAC,OAAAC,aAAAF,KAAAC,OAAAE,UAAAC,eAAAC,KAAAL,EAAA,eAAAC,OAAAK,eAAAN,EAAA,cAAAO,cAAA,EAAAC,MAAA,CAAAC,KAAA,eAAAC,SAAA,mBAC/B,MAAMC,EAAc,CAClBX,gBAEIY,EAAYC,IACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,EAAKC,YAAAH,EAAAI,GAER,OAAOC,YAACR,EAASS,YAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,cAG5EF,YAAA,MACE,GAAM,6BACJ,+BACJA,YAAA,SAAI,kDACJA,YAAA,MACE,GAAM,cACJ,cACJA,YAAA,SAAI,oDACJA,YAAA,SAAI,uCACJA,YAAA,MACE,GAAM,UACJ,UACJA,YAAA,SAAI,sBAAsBA,YAAA,cAAYG,WAAW,KAAK,SAAsB,6BAC5EH,YAAA,MACE,GAAM,YACJ,cACJA,YAAA,SAAGA,YAAA,KAAGG,WAAW,IACb,KAAQ,kDACN,mDACNH,YAAA,SAAI,OAAOA,YAAA,cAAYG,WAAW,KAAK,SAAsB,wDAAwDH,YAAA,cAAYG,WAAW,KAAK,aAA0B,SAC3KH,YAAA,MACE,GAAM,gBACJ,kBACJA,YAAA,SAAI,YAAYA,YAAA,cAAYG,WAAW,KAAK,aAA0B,KAAKH,YAAA,cAAYG,WAAW,KAAK,cAA2B,KAAKH,YAAA,cAAYG,WAAW,KAAK,aAA0B,KAAKH,YAAA,cAAYG,WAAW,KAAK,cAA2B,KACzPH,YAAA,MACE,GAAM,WACJ,aACJA,YAAA,SAAI,0BAGP,IAAAN,UAAAb,OAAAa,IAAAb,OAAAC,aAAAY,KAAAb,OAAAE,UAAAC,eAAAC,KAAAS,EAAA,eAAAb,OAAAK,eAAAQ,EAAA,cAAAP,cAAA,EAAAC,MAAA,CAAAC,KAAA,aAAAC,SAAA,mBAEDI,EAAWU,gBAAiB","file":"component---src-index-mdx-588a72528e327bc2bbab.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"C:/Users/binmax/Workspace/react-semantic-layout/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"react-semantic-layoutbeta\"\n    }}>{`react-semantic-layout(beta)`}</h1>\n    <p>{`一套布局组件，灵感来自 flutter，可以按照组件同名去 flutter 搜索相同的组件。`}</p>\n    <h2 {...{\n      \"id\": \"motivation\"\n    }}>{`Motivation`}</h2>\n    <p>{`在基础组件的支持下，我们的业务代码已经很少需要写样式了，而我们的大部分工作是处理布局和实现逻辑。`}</p>\n    <p>{`本组件尝试一种新的写法，让我们业务仔回归初心，专心处理布局和实现逻辑。`}</p>\n    <h2 {...{\n      \"id\": \"design\"\n    }}>{`Design`}</h2>\n    <p>{`效仿 flutter 的设计，我们把 `}<inlineCode parentName=\"p\">{`style`}</inlineCode>{` 拆分成 3 个部分, 分别是：布局，约束和样式。`}</p>\n    <h3 {...{\n      \"id\": \"布局layout\"\n    }}>{`布局(Layout)`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://flutter.dev/docs/development/ui/layout\"\n      }}>{`https://flutter.dev/docs/development/ui/layout`}</a></p>\n    <p>{`目前从 `}<inlineCode parentName=\"p\">{`style`}</inlineCode>{` 拆分出来的布局属性有：display，margin，padding，overflow等等，具体需要参考 `}<inlineCode parentName=\"p\">{`Container`}</inlineCode>{` 的实现。`}</p>\n    <h3 {...{\n      \"id\": \"约束constraint\"\n    }}>{`约束(Constraint)`}</h3>\n    <p>{`只有 4 个属性 `}<inlineCode parentName=\"p\">{`max-width`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`max-height`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`min-width`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`min-height`}</inlineCode>{`。`}</p>\n    <h3 {...{\n      \"id\": \"样式style\"\n    }}>{`样式(Style)`}</h3>\n    <p>{`字体大小，字体颜色，背景色等等。`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}